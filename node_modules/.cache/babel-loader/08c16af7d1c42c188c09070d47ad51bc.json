{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport Select from 'react-select';\nimport spacetime from 'spacetime';\nimport soft from 'timezone-soft';\nimport allTimezones from './timezone-list';\nexport var LabelType;\n\n(function (LabelType) {\n  LabelType[\"ORIGINAL\"] = \"original\";\n  LabelType[\"ALTNAME\"] = \"altName\";\n  LabelType[\"ABBREV\"] = \"abbrev\";\n})(LabelType || (LabelType = {}));\n\nexport { allTimezones };\nexport default function TimezoneSelect(_a) {\n  var {\n    value,\n    onBlur,\n    onChange,\n    labelStyle = 'original',\n    timezones\n  } = _a,\n      props = __rest(_a, [\"value\", \"onBlur\", \"onChange\", \"labelStyle\", \"timezones\"]);\n\n  if (!timezones) timezones = allTimezones;\n  const getOptions = React.useMemo(() => {\n    return Object.entries(timezones).reduce((selectOptions, zone) => {\n      var _a, _b, _c, _d;\n\n      const now = spacetime.now(zone[0]);\n      const tz = now.timezone();\n      const tzStrings = soft(zone[0]);\n      let label = '';\n      let abbr = now.isDST() ? // @ts-expect-error\n      (_a = tzStrings[0].daylight) === null || _a === void 0 ? void 0 : _a.abbr : // @ts-expect-error\n      (_b = tzStrings[0].standard) === null || _b === void 0 ? void 0 : _b.abbr;\n      let altName = now.isDST() ? (_c = tzStrings[0].daylight) === null || _c === void 0 ? void 0 : _c.name : (_d = tzStrings[0].standard) === null || _d === void 0 ? void 0 : _d.name;\n      const min = tz.current.offset * 60;\n      const hr = `${min / 60 ^ 0}:` + (min % 60 === 0 ? '00' : Math.abs(min % 60));\n      const prefix = `(GMT${hr.includes('-') ? hr : `+${hr}`}) ${zone[1]}`;\n\n      switch (labelStyle) {\n        case 'original':\n          label = prefix;\n          break;\n\n        case 'altName':\n          label = `${prefix} ${(altName === null || altName === void 0 ? void 0 : altName.length) ? `(${altName})` : ''}`;\n          break;\n\n        case 'abbrev':\n          label = `${prefix} ${(abbr === null || abbr === void 0 ? void 0 : abbr.length) < 5 ? `(${abbr})` : ''}`;\n          break;\n\n        default:\n          label = `${prefix}`;\n      }\n\n      selectOptions.push({\n        value: tz.name,\n        label: label,\n        offset: tz.current.offset,\n        abbrev: abbr,\n        altName: altName\n      });\n      return selectOptions;\n    }, []).sort((a, b) => a.offset - b.offset);\n  }, [labelStyle, timezones]);\n\n  const handleChange = tz => {\n    onChange && onChange(tz);\n  };\n\n  const findFuzzyTz = zone => {\n    let currentTime = spacetime.now('GMT');\n\n    try {\n      currentTime = spacetime.now(zone);\n    } catch (err) {\n      return;\n    }\n\n    return getOptions.filter(tz => tz.offset === currentTime.timezone().current.offset).map(tz => {\n      let score = 0;\n\n      if (currentTime.timezones[tz.value.toLowerCase()] && !!currentTime.timezones[tz.value.toLowerCase()].dst === currentTime.timezone().hasDst) {\n        if (tz.value.toLowerCase().indexOf(currentTime.tz.substr(currentTime.tz.indexOf('/') + 1)) !== -1) {\n          score += 8;\n        }\n\n        if (tz.label.toLowerCase().indexOf(currentTime.tz.substr(currentTime.tz.indexOf('/') + 1)) !== -1) {\n          score += 4;\n        }\n\n        if (tz.value.toLowerCase().indexOf(currentTime.tz.substr(0, currentTime.tz.indexOf('/')))) {\n          score += 2;\n        }\n\n        score += 1;\n      } else if (tz.value === 'GMT') {\n        score += 1;\n      }\n\n      return {\n        tz,\n        score\n      };\n    }).sort((a, b) => b.score - a.score).map(({\n      tz\n    }) => tz)[0];\n  };\n\n  const parseTimezone = zone => {\n    if (typeof zone === 'object' && zone.value && zone.label) return zone;\n\n    if (typeof zone === 'string') {\n      return getOptions.find(tz => tz.value === zone) || zone.indexOf('/') !== -1 && findFuzzyTz(zone);\n    } else if (zone.value && !zone.label) {\n      return getOptions.find(tz => tz.value === zone.value);\n    }\n  };\n\n  return React.createElement(Select, Object.assign({\n    value: parseTimezone(value),\n    onChange: handleChange,\n    options: getOptions,\n    onBlur: onBlur\n  }, props));\n}","map":{"version":3,"sources":["../src/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport Select from 'react-select';\nimport spacetime from 'spacetime';\nimport soft from 'timezone-soft';\nimport allTimezones from './timezone-list';\nexport var LabelType;\n(function (LabelType) {\n    LabelType[\"ORIGINAL\"] = \"original\";\n    LabelType[\"ALTNAME\"] = \"altName\";\n    LabelType[\"ABBREV\"] = \"abbrev\";\n})(LabelType || (LabelType = {}));\nexport { allTimezones };\nexport default function TimezoneSelect(_a) {\n    var { value, onBlur, onChange, labelStyle = 'original', timezones } = _a, props = __rest(_a, [\"value\", \"onBlur\", \"onChange\", \"labelStyle\", \"timezones\"]);\n    if (!timezones)\n        timezones = allTimezones;\n    const getOptions = React.useMemo(() => {\n        return Object.entries(timezones)\n            .reduce((selectOptions, zone) => {\n            var _a, _b, _c, _d;\n            const now = spacetime.now(zone[0]);\n            const tz = now.timezone();\n            const tzStrings = soft(zone[0]);\n            let label = '';\n            let abbr = now.isDST()\n                ? // @ts-expect-error\n                    (_a = tzStrings[0].daylight) === null || _a === void 0 ? void 0 : _a.abbr\n                : // @ts-expect-error\n                    (_b = tzStrings[0].standard) === null || _b === void 0 ? void 0 : _b.abbr;\n            let altName = now.isDST()\n                ? (_c = tzStrings[0].daylight) === null || _c === void 0 ? void 0 : _c.name\n                : (_d = tzStrings[0].standard) === null || _d === void 0 ? void 0 : _d.name;\n            const min = tz.current.offset * 60;\n            const hr = `${(min / 60) ^ 0}:` + (min % 60 === 0 ? '00' : Math.abs(min % 60));\n            const prefix = `(GMT${hr.includes('-') ? hr : `+${hr}`}) ${zone[1]}`;\n            switch (labelStyle) {\n                case 'original':\n                    label = prefix;\n                    break;\n                case 'altName':\n                    label = `${prefix} ${(altName === null || altName === void 0 ? void 0 : altName.length) ? `(${altName})` : ''}`;\n                    break;\n                case 'abbrev':\n                    label = `${prefix} ${(abbr === null || abbr === void 0 ? void 0 : abbr.length) < 5 ? `(${abbr})` : ''}`;\n                    break;\n                default:\n                    label = `${prefix}`;\n            }\n            selectOptions.push({\n                value: tz.name,\n                label: label,\n                offset: tz.current.offset,\n                abbrev: abbr,\n                altName: altName,\n            });\n            return selectOptions;\n        }, [])\n            .sort((a, b) => a.offset - b.offset);\n    }, [labelStyle, timezones]);\n    const handleChange = (tz) => {\n        onChange && onChange(tz);\n    };\n    const findFuzzyTz = (zone) => {\n        let currentTime = spacetime.now('GMT');\n        try {\n            currentTime = spacetime.now(zone);\n        }\n        catch (err) {\n            return;\n        }\n        return getOptions\n            .filter((tz) => tz.offset === currentTime.timezone().current.offset)\n            .map((tz) => {\n            let score = 0;\n            if (currentTime.timezones[tz.value.toLowerCase()] &&\n                !!currentTime.timezones[tz.value.toLowerCase()].dst ===\n                    currentTime.timezone().hasDst) {\n                if (tz.value\n                    .toLowerCase()\n                    .indexOf(currentTime.tz.substr(currentTime.tz.indexOf('/') + 1)) !== -1) {\n                    score += 8;\n                }\n                if (tz.label\n                    .toLowerCase()\n                    .indexOf(currentTime.tz.substr(currentTime.tz.indexOf('/') + 1)) !== -1) {\n                    score += 4;\n                }\n                if (tz.value\n                    .toLowerCase()\n                    .indexOf(currentTime.tz.substr(0, currentTime.tz.indexOf('/')))) {\n                    score += 2;\n                }\n                score += 1;\n            }\n            else if (tz.value === 'GMT') {\n                score += 1;\n            }\n            return { tz, score };\n        })\n            .sort((a, b) => b.score - a.score)\n            .map(({ tz }) => tz)[0];\n    };\n    const parseTimezone = (zone) => {\n        if (typeof zone === 'object' && zone.value && zone.label)\n            return zone;\n        if (typeof zone === 'string') {\n            return (getOptions.find(tz => tz.value === zone) ||\n                (zone.indexOf('/') !== -1 && findFuzzyTz(zone)));\n        }\n        else if (zone.value && !zone.label) {\n            return getOptions.find(tz => tz.value === zone.value);\n        }\n    };\n    return (React.createElement(Select, Object.assign({ value: parseTimezone(value), onChange: handleChange, options: getOptions, onBlur: onBlur }, props)));\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}